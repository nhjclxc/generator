package ${packageName}.mapper;

import ${packageName}.model.${ClassName};

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * ${functionName}Mapper接口
 *
 * @author ${author}
 * @date ${datetime}
 */
@Mapper
public interface ${ClassName}Mapper {

    /**
     * 查询${functionName}
     *
     * @param ${pkColumn.javaField} ${functionName}主键
     * @return ${functionName}
     */
    public ${ClassName} select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    public List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * 新增${functionName}
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int insert${ClassName}Selective(${ClassName} ${className});

    /**
     * 修改${functionName}
     *
     * @param ${className} ${functionName}
     * @return 结果
     */
    public int update${ClassName}SelectiveByPrimaryKey(${ClassName} ${className});

    /**
     * 删除${functionName}
     *
     * @param ${pkColumn.javaField} ${functionName}主键
     * @return 结果
     */
    public int delete${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaType} ${pkColumn.javaField});

    /**
     * 批量删除${functionName}
     *
     * @param ${pkColumn.javaField}List 需要删除的数据主键集合
     * @return 结果
     */
    public int delete${ClassName}By${pkColumn.capJavaField}List(@Param("${pkColumn.javaField}List") List<${pkColumn.javaType}> ${pkColumn.javaField}List);

    /**
     * 批量查询${functionName}
     *
     * @param ${pkColumn.javaField}List 需要查询的数据主键集合
     * @return 结果
     */
    public List<${ClassName}> select${ClassName}By${pkColumn.capJavaField}List(@Param("${pkColumn.javaField}List") List<${pkColumn.javaType}> ${pkColumn.javaField}List);

    /**
     * 批量新增${functionName}
     *
     * @param ${className}List 批量新增数据的${functionName}
     * @return 新增条目数
     */
    public int insertBatch(@Param("${className}List") List<${ClassName}> ${className}List);

    /**
     * 批量修改${functionName}
     *
     * @param ${className}List 批量新增数据的${functionName}
     * @return 修改条目数
     */
    public int updateBatch(@Param("${className}List") List<${ClassName}> ${className}List);

}
