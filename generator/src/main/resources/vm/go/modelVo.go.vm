package vo

import (
    "fmt"
    "github.com/jinzhu/copier"
)

// ${functionName}对象 ${ClassName}Vo
// @author ${author}
// @date ${datetime}
type ${ClassName}Vo struct {

    model.${ClassName}

    Foo string `form:"foo"` // foo
    Bar string `form:"bar"` // bar
    // ...
}


// ModelToVo model 转化为 modelVo
func (this *${ClassName}Vo) ModelToVo(${className} *model.${ClassName}) error {
    // go get github.com/jinzhu/copier

    ${className} = &model.${ClassName}{} // copier.Copy 不会自动为其分配空间，所以初始化指针指向的结构体
    err := copier.Copy(&this, &${className})
    if err != nil {
        fmt.Printf("ModelToVo Copy error: %v", err)
        return err
    }
    return nil
}
